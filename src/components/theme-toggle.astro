---
// Theme Toggle Component
---

<button
  id="theme-toggle"
  class="fixed bottom-6 left-6 z-50 flex h-12 w-12 items-center justify-center rounded-full bg-slate-200 shadow-lg transition-all duration-300 ease-in-out hover:scale-110 hover:shadow-xl dark:bg-slate-700 dark:shadow-slate-900/30"
  aria-label="Toggle theme"
  title="Toggle theme"
>
  <!-- Sun icon for dark mode (when light theme is active) -->
  <svg
    id="sun-icon"
    class="h-6 w-6 text-yellow-500 transition-all duration-300 ease-in-out dark:rotate-90 dark:scale-0"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
  </svg>

  <!-- Moon icon for light mode (when dark theme is active) -->
  <svg
    id="moon-icon"
    class="absolute h-6 w-6 text-slate-700 transition-all duration-300 ease-in-out rotate-90 scale-0 dark:rotate-0 dark:scale-100 dark:text-slate-300"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
</button>

<script>
  function initThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    const html = document.documentElement;
    
    // Check for saved theme preference or default to 'dark'
    const savedTheme = localStorage.getItem('theme');
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const currentTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
    
    // Apply initial theme
    if (currentTheme === 'dark') {
      html.classList.add('dark');
    } else {
      html.classList.remove('dark');
    }
    
    // Store theme preference
    localStorage.setItem('theme', currentTheme);
    
    // Toggle theme function
    function toggleTheme() {
      const isDark = html.classList.contains('dark');
      
      if (isDark) {
        html.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        html.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
    }
    
    // Add click event listener
    themeToggle?.addEventListener('click', toggleTheme);
    
    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        if (e.matches) {
          html.classList.add('dark');
        } else {
          html.classList.remove('dark');
        }
      }
    });
  }
  
  // Initialize on DOM content loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initThemeToggle);
  } else {
    initThemeToggle();
  }
</script>

<style>
  #theme-toggle {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }
  
  #theme-toggle:hover {
    transform: scale(1.1);
  }
  
  #theme-toggle:active {
    transform: scale(0.95);
  }
  
  /* Smooth icon transitions */
  #sun-icon, #moon-icon {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>
